/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
    ethers,
    EventFilter,
    Signer,
    BigNumber,
    BigNumberish,
    PopulatedTransaction,
} from "ethers"
import {
    Contract,
    ContractTransaction,
    CallOverrides,
} from "@ethersproject/contracts"
import { BytesLike } from "@ethersproject/bytes"
import { Listener, Provider } from "@ethersproject/providers"
import { FunctionFragment, EventFragment, Result } from "@ethersproject/abi"

interface TokenInfoInterface extends ethers.utils.Interface {
    functions: {
        "getBytes32Properties(address)": FunctionFragment
        "getInfo(address)": FunctionFragment
        "getInfoBatch(address[])": FunctionFragment
        "getStringProperties(address)": FunctionFragment
    }

    encodeFunctionData(
        functionFragment: "getBytes32Properties",
        values: [string]
    ): string
    encodeFunctionData(functionFragment: "getInfo", values: [string]): string
    encodeFunctionData(
        functionFragment: "getInfoBatch",
        values: [string[]]
    ): string
    encodeFunctionData(
        functionFragment: "getStringProperties",
        values: [string]
    ): string

    decodeFunctionResult(
        functionFragment: "getBytes32Properties",
        data: BytesLike
    ): Result
    decodeFunctionResult(functionFragment: "getInfo", data: BytesLike): Result
    decodeFunctionResult(
        functionFragment: "getInfoBatch",
        data: BytesLike
    ): Result
    decodeFunctionResult(
        functionFragment: "getStringProperties",
        data: BytesLike
    ): Result

    events: {}
}

export class TokenInfo extends Contract {
    connect(signerOrProvider: Signer | Provider | string): this
    attach(addressOrName: string): this
    deployed(): Promise<this>

    on(event: EventFilter | string, listener: Listener): this
    once(event: EventFilter | string, listener: Listener): this
    addListener(eventName: EventFilter | string, listener: Listener): this
    removeAllListeners(eventName: EventFilter | string): this
    removeListener(eventName: any, listener: Listener): this

    interface: TokenInfoInterface

    functions: {
        getBytes32Properties(
            token: string,
            overrides?: CallOverrides
        ): Promise<[string, string] & { symbol: string; name: string }>

        "getBytes32Properties(address)"(
            token: string,
            overrides?: CallOverrides
        ): Promise<[string, string] & { symbol: string; name: string }>

        getInfo(
            token: string,
            overrides?: CallOverrides
        ): Promise<
            [[string, string] & { symbol: string; name: string }] & {
                info: [string, string] & { symbol: string; name: string }
            }
        >

        "getInfo(address)"(
            token: string,
            overrides?: CallOverrides
        ): Promise<
            [[string, string] & { symbol: string; name: string }] & {
                info: [string, string] & { symbol: string; name: string }
            }
        >

        getInfoBatch(
            tokens: string[],
            overrides?: CallOverrides
        ): Promise<
            [([string, string] & { symbol: string; name: string })[]] & {
                infos: ([string, string] & { symbol: string; name: string })[]
            }
        >

        "getInfoBatch(address[])"(
            tokens: string[],
            overrides?: CallOverrides
        ): Promise<
            [([string, string] & { symbol: string; name: string })[]] & {
                infos: ([string, string] & { symbol: string; name: string })[]
            }
        >

        getStringProperties(
            token: string,
            overrides?: CallOverrides
        ): Promise<[string, string] & { symbol: string; name: string }>

        "getStringProperties(address)"(
            token: string,
            overrides?: CallOverrides
        ): Promise<[string, string] & { symbol: string; name: string }>
    }

    getBytes32Properties(
        token: string,
        overrides?: CallOverrides
    ): Promise<[string, string] & { symbol: string; name: string }>

    "getBytes32Properties(address)"(
        token: string,
        overrides?: CallOverrides
    ): Promise<[string, string] & { symbol: string; name: string }>

    getInfo(
        token: string,
        overrides?: CallOverrides
    ): Promise<[string, string] & { symbol: string; name: string }>

    "getInfo(address)"(
        token: string,
        overrides?: CallOverrides
    ): Promise<[string, string] & { symbol: string; name: string }>

    getInfoBatch(
        tokens: string[],
        overrides?: CallOverrides
    ): Promise<([string, string] & { symbol: string; name: string })[]>

    "getInfoBatch(address[])"(
        tokens: string[],
        overrides?: CallOverrides
    ): Promise<([string, string] & { symbol: string; name: string })[]>

    getStringProperties(
        token: string,
        overrides?: CallOverrides
    ): Promise<[string, string] & { symbol: string; name: string }>

    "getStringProperties(address)"(
        token: string,
        overrides?: CallOverrides
    ): Promise<[string, string] & { symbol: string; name: string }>

    callStatic: {
        getBytes32Properties(
            token: string,
            overrides?: CallOverrides
        ): Promise<[string, string] & { symbol: string; name: string }>

        "getBytes32Properties(address)"(
            token: string,
            overrides?: CallOverrides
        ): Promise<[string, string] & { symbol: string; name: string }>

        getInfo(
            token: string,
            overrides?: CallOverrides
        ): Promise<[string, string] & { symbol: string; name: string }>

        "getInfo(address)"(
            token: string,
            overrides?: CallOverrides
        ): Promise<[string, string] & { symbol: string; name: string }>

        getInfoBatch(
            tokens: string[],
            overrides?: CallOverrides
        ): Promise<([string, string] & { symbol: string; name: string })[]>

        "getInfoBatch(address[])"(
            tokens: string[],
            overrides?: CallOverrides
        ): Promise<([string, string] & { symbol: string; name: string })[]>

        getStringProperties(
            token: string,
            overrides?: CallOverrides
        ): Promise<[string, string] & { symbol: string; name: string }>

        "getStringProperties(address)"(
            token: string,
            overrides?: CallOverrides
        ): Promise<[string, string] & { symbol: string; name: string }>
    }

    filters: {}

    estimateGas: {
        getBytes32Properties(
            token: string,
            overrides?: CallOverrides
        ): Promise<BigNumber>

        "getBytes32Properties(address)"(
            token: string,
            overrides?: CallOverrides
        ): Promise<BigNumber>

        getInfo(token: string, overrides?: CallOverrides): Promise<BigNumber>

        "getInfo(address)"(
            token: string,
            overrides?: CallOverrides
        ): Promise<BigNumber>

        getInfoBatch(
            tokens: string[],
            overrides?: CallOverrides
        ): Promise<BigNumber>

        "getInfoBatch(address[])"(
            tokens: string[],
            overrides?: CallOverrides
        ): Promise<BigNumber>

        getStringProperties(
            token: string,
            overrides?: CallOverrides
        ): Promise<BigNumber>

        "getStringProperties(address)"(
            token: string,
            overrides?: CallOverrides
        ): Promise<BigNumber>
    }

    populateTransaction: {
        getBytes32Properties(
            token: string,
            overrides?: CallOverrides
        ): Promise<PopulatedTransaction>

        "getBytes32Properties(address)"(
            token: string,
            overrides?: CallOverrides
        ): Promise<PopulatedTransaction>

        getInfo(
            token: string,
            overrides?: CallOverrides
        ): Promise<PopulatedTransaction>

        "getInfo(address)"(
            token: string,
            overrides?: CallOverrides
        ): Promise<PopulatedTransaction>

        getInfoBatch(
            tokens: string[],
            overrides?: CallOverrides
        ): Promise<PopulatedTransaction>

        "getInfoBatch(address[])"(
            tokens: string[],
            overrides?: CallOverrides
        ): Promise<PopulatedTransaction>

        getStringProperties(
            token: string,
            overrides?: CallOverrides
        ): Promise<PopulatedTransaction>

        "getStringProperties(address)"(
            token: string,
            overrides?: CallOverrides
        ): Promise<PopulatedTransaction>
    }
}
